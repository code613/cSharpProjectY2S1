<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL"
        xmlns:BE="clr-namespace:BE;assembly=BE" x:Class="PL.AddContractWindow"
        mc:Ignorable="d"
        Title="AddContractWindow" Height="521" Width="600"  Icon="./resources/newPinkFlower.png"  >

    <Grid Background="SkyBlue">

        <Grid x:Name="grid1" VerticalAlignment="Top" Margin="27,55,263,0"  HorizontalAlignment="Center" Width="302" Height="357" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" MinHeight="51"/>
                <RowDefinition Height="Auto" MinHeight="43"/>
                <RowDefinition Height="Auto" MinHeight="38"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="94"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Label VerticalAlignment="Center" Grid.Row="3" Margin="3,8,0,4" HorizontalAlignment="Left" Grid.Column="0" Content="End Date:" Height="26" Width="61" Grid.ColumnSpan="2"/>
            <DatePicker x:Name="endDateDatePicker"  VerticalAlignment="Center" SelectedDate="{Binding EndDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Margin="3,10,0,4" HorizontalAlignment="Left" Grid.Column="2" Height="24" Width="102"/>
            <Label VerticalAlignment="Center" Grid.Row="0" Margin="3,13,0,12" HorizontalAlignment="Left" Grid.Column="0" Content="Id Nanny:" Height="26" Width="61" Grid.ColumnSpan="2"/>

            <ComboBox x:Name="id_NannyComboBox" DisplayMemberPath="ID"
                  Background="Beige"  Width="120"  FontSize="28" VerticalAlignment="Center"
                  Text="{Binding Id_Nanny, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" 
                  Grid.Row="0" Margin="4,0,0,10" Height="41" HorizontalAlignment="Left" Grid.Column="2" BorderThickness="3" BorderBrush="Gray">
                <!--<ComboBox x:Name="cbobox" Height="30">-->
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="Template" >
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBlock Text="{Binding Path=ID}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ComboBox.ItemContainerStyle>
                <ComboBox.ItemsSource>
                    <x:Array Type="sys:String" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                        <sys:String>One</sys:String>
                        <sys:String>Two</sys:String>
                        <sys:String>Three</sys:String>
                    </x:Array >
                </ComboBox.ItemsSource>
            </ComboBox>
            <Label VerticalAlignment="Center" Grid.Row="1" Margin="3,8,0,9" HorizontalAlignment="Left" Grid.Column="0" Content="Id Child:" Height="26" Width="53" Grid.ColumnSpan="2"/>
            <ComboBox x:Name="idChildComboBox" DisplayMemberPath="ID"
                  Background="Beige"  Width="120"  FontSize="28" VerticalAlignment="Center"
                  Text="{Binding IdChild, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" 
                     Grid.Row="1" Margin="3,0,0,1" Height="42" HorizontalAlignment="Left" Grid.Column="2" BorderThickness="3" BorderBrush="Gray">
                <!--<ComboBox x:Name="cbobox" Height="30">-->
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="Template" >
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBlock Text="{Binding Path=ID}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ComboBox.ItemContainerStyle>
                <ComboBox.ItemsSource>
                    <x:Array Type="sys:String" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                        <sys:String>One</sys:String>
                        <sys:String>Two</sys:String>
                        <sys:String>Three</sys:String>
                    </x:Array >
                </ComboBox.ItemsSource>
            </ComboBox>
            <Label VerticalAlignment="Center" Grid.Row="4" Margin="3,4,0,8" HorizontalAlignment="Left" Grid.Column="0" Content="Is Per Month:" Height="26" Width="80" Grid.ColumnSpan="2"/>
            <CheckBox x:Name="isPerMonthCheckBox"  VerticalAlignment="Center" Grid.Row="4" Margin="3,8,0,14" IsChecked="{Binding IsPerMonth, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="2" Content="" Height="16" Width="17"/>
            <Label VerticalAlignment="Center" Grid.Row="8" Margin="3,4,0,7" HorizontalAlignment="Left" Grid.Column="0" Content="Is Signed:" Height="26" Width="61" Grid.ColumnSpan="2"/>
            <CheckBox x:Name="SignedCheckBox" VerticalAlignment="Center"  Grid.Row="8" Margin="3,8,0,13" IsChecked="{Binding IsSigned, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="2" Content="" Height="16" Width="17"/>
            <Label VerticalAlignment="Center" Grid.Row="6" Margin="3,4,0,7" HorizontalAlignment="Left" Grid.Column="0" Content="Sal Per Hour:" Height="26" Width="78" Grid.ColumnSpan="2"/>
            <TextBox x:Name="sal_Per_HourTextBox" Width="120"  VerticalAlignment="Center" Text="{Binding Sal_Per_Hour, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="6" Margin="3,6,0,9" Height="22" HorizontalAlignment="Left" Grid.Column="2"/>
            <Label VerticalAlignment="Center" Grid.Row="5" Margin="3,8,0,4" HorizontalAlignment="Left" Grid.Column="0" Content="Sal Per Month:" Height="26" Width="87" Grid.ColumnSpan="2"/>
            <TextBox x:Name="sal_Per_MonthTextBox"  Width="120" VerticalAlignment="Center" Text="{Binding Sal_Per_Month, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5" Margin="3,10,0,6" Height="22" HorizontalAlignment="Left" Grid.Column="2" IsEnabled="{Binding ElementName=isPerMonthCheckBox, Path=IsChecked}"/>
            <Label VerticalAlignment="Center" Grid.Row="2" Margin="3,4,0,8" HorizontalAlignment="Left" Grid.Column="0" Content="Start Date:" Height="26" Width="66" Grid.ColumnSpan="2"/>
            <DatePicker x:Name="startDateDatePicker" Background="LightPink" VerticalAlignment="Center" SelectedDate="{Binding StartDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Margin="3,4,0,10" HorizontalAlignment="Left" Grid.Column="2" Height="24" Width="102"/>
            <Label VerticalAlignment="Center" Grid.Row="7" Margin="3,7,0,4" HorizontalAlignment="Left" Grid.Column="0" Content="have they met?" Height="26" Width="90" Grid.ColumnSpan="2"/>
            <CheckBox x:Name="meetingCheckBox" VerticalAlignment="Center"  Grid.Row="7" Margin="3,13,0,8" IsChecked="{Binding Theyknow, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="2" Content="" Height="16" Width="17"/>
        </Grid>
        <Button x:Name="AddContractButton"  Content="Add Contract" Margin="0,0,75,62" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="141" Height="57" Click="AddContractButton_Click" >
            <Button.Style>
                <Style>
                    <Style.Triggers>
                        <!--<Trigger  Property="IsMouseOver"  Value="true">
                            <Setter Property="Background"  Value="Red"/>
                            <Setter Property="FontWeight"  Value="ExtraBold"/>
                            <Setter Property="Foreground" Value="Red"/>
                        </Trigger>-->
                        <DataTrigger Binding="{Binding ElementName=endDateDatePicker, Path=Text}" Value="">
                            <Setter Property="Button.IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=id_NannyTextBox, Path=Text  }" Value="">
                            <Setter Property="Button.IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=idChildTextBox, Path=Text  }" Value="">
                            <Setter Property="Button.IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=isPerMonthCheckBox, Path=IsChecked  }" Value="">
                            <Setter Property="Button.IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=startDateDatePicker, Path=Text  }" Value="">
                            <Setter Property="Button.IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=theyknowCheckBox, Path=IsChecked  }" Value="">
                            <Setter Property="Button.IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <TextBlock x:Name="textBlock" HorizontalAlignment="Center" TextWrapping="Wrap" Text="Fill the details of the contract:" FontWeight="Medium" FontSize="18" VerticalAlignment="Top" Margin="71,10,263,0" Width="258"/>
        <Image x:Name="image" Source="./resources/badCaretakerIMG.jpg" HorizontalAlignment="Left" Height="288" Margin="342,73,0,0" VerticalAlignment="Top" Width="207"/>
    </Grid>

</Window>
